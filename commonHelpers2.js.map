{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst selector = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst daysSpan = document.querySelector('span[data-days]');\nconst hoursSpan = document.querySelector('span[data-hours]');\nconst minutesSpan = document.querySelector('span[data-minutes]');\nconst secondsSpan = document.querySelector('span[data-seconds]');\nlet timerId;\n\nselector.value = new Date();\n\nstartButton.setAttribute('disabled', '');\n\nlet selectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n    const currentDate = new Date();\n\n    if (selectedDate <= currentDate) {\n      alert('Please choose a date in the future');\n      return;\n    }\n\n    startButton.removeAttribute('disabled');\n  },\n};\n\nflatpickr(selector, options);\n\nstartButton.addEventListener('click', () => {\n  clearInterval(timerId);\n  timerId = setInterval(updateTimerDisplay, 1000);\n  updateTimerDisplay();\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction updateTimerDisplay() {\n  const currentDate = new Date();\n  const delta = selectedDate - currentDate;\n\n  if (delta <= 0) {\n    clearInterval(timerId);\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(delta);\n\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n"],"names":["selector","startButton","daysSpan","hoursSpan","minutesSpan","secondsSpan","timerId","selectedDate","options","selectedDates","currentDate","flatpickr","updateTimerDisplay","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","delta"],"mappings":"mIAGA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAC/D,IAAIC,EAEJN,EAAS,MAAQ,IAAI,KAErBC,EAAY,aAAa,WAAY,EAAE,EAEvC,IAAIM,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAeE,EAAc,GAC7B,MAAMC,EAAc,IAAI,KAExB,GAAIH,GAAgBG,EAAa,CAC/B,MAAM,oCAAoC,EAC1C,MACD,CAEDT,EAAY,gBAAgB,UAAU,CACvC,CACH,EAEAU,EAAUX,EAAUQ,CAAO,EAE3BP,EAAY,iBAAiB,QAAS,IAAM,CAC1C,cAAcK,CAAO,EACrBA,EAAU,YAAYM,EAAoB,GAAI,EAC9CA,GACF,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASR,GAAqB,CAC5B,MAAMF,EAAc,IAAI,KAClBW,EAAQd,EAAeG,EAE7B,GAAIW,GAAS,EAAG,CACd,cAAcf,CAAO,EACrB,MACD,CAED,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUQ,CAAK,EAEzDnB,EAAS,YAAciB,EAAeJ,CAAI,EAC1CZ,EAAU,YAAcgB,EAAeH,CAAK,EAC5CZ,EAAY,YAAce,EAAeF,CAAO,EAChDZ,EAAY,YAAcc,EAAeD,CAAO,CAClD"}